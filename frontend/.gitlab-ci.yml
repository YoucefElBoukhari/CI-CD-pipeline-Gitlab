stages:
  - install
  - test
  - Cache
  - build
  - security
  - build-image
  - scan

variables:
  SAST_IMAGE_SUFFIX: '-fips'

default:
  image: node:20-buster-slim

install_Dependencies:
  stage: install
  script:
    - npm install  # Install frontend project dependencies
  tags:
    - pipeline

include:
  - template: Security/SAST.gitlab-ci.yml

variables:
  SAST_EXCLUDED_ANALYZERS: "spotbugs"

node-Modules-Cache:
  stage: Cache
  script:
    - echo "This job uses a cache."
  cache:
    key: binaries-cache
    paths:
      - node_modules/
  tags:
    - pipeline

build-frontend:
  stage: build
  cache:
    key:
      files:
        - node.modules
    paths:
      - .
  script:
    - echo "Building frontend application"
    - cd frontend
    - npm install
    - npm run build
  tags:
    - pipeline

build-image-Frontend:
  stage: build-image
  image: docker:24.0.6-dind
  services:
    - name: docker:24.0.6-dind
      alias: docker
  variables:
    DOCKER_HOST : tcp://172.17.0.1:2375
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - echo "$REGISTRY_PASS" | docker login -u "$REGISTRY_USER" --password-stdin
  script:
    - docker build -t "$REGISTRY_USER"/my_stock_pro:mystockFrontend .
    - docker push "$REGISTRY_USER"/my_stock_pro:mystockFrontend
  tags:
    - pipeline

scan_frontend_Image:
  stage: scan
  script:
    - echo "Running container scanning job for the frontend"
  variables:
    CS_IMAGE: elboukhariyoucef/my_stock_pro:mystockFrontend
  tags:
    - pipeline
