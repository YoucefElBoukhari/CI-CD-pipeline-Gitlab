stages:
  - install
  - Security
  - cache
  - build
  - build-image

default:
  image: node:20-buster-slim

install_dependencies:
  stage: install
  script:
    - npm install  # Install frontend project dependencies

include:
  - template: Security/SAST.gitlab-ci.yml

build_frontend:
  stage: build
  script:
    - echo "Building frontend application"
    - cd frontend
    - npm run build

build_backend:
  stage: build
  script:
    - npm uninstall -g babel
    - npm install --save-dev babel-cli  # Install project dependencies
    - npx babel backend -d dist  # Run the build command directly
    
build_image_frontend:
  stage: build-image
  image: docker:24.0.6
  services:
    - docker:24.0.6-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - cd frontend
    - apk add --no-cache git  # Install Git
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
  script:
    - docker build -t elboukhariyoucef/my_stock_pro:mystockFrontend .
    - docker push elboukhariyoucef/my_stock_pro:mystockFrontend

build_image_backend:
  stage: build-image
  image: docker:24.0.6
  services:
    - docker:24.0.6-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - cd backend
    - apk add --no-cache git  # Install Git
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
  script:
    - docker build -t elboukhariyoucef/my_stock_pro:mystockBackend .
    - docker push elboukhariyoucef/my_stock_pro:mystockBackend
